// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type UserStatus string

const (
	UserStatusDisabled   UserStatus = "disabled"
	UserStatusUnverified UserStatus = "unverified"
	UserStatusActive     UserStatus = "active"
)

func (e *UserStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UserStatus(s)
	case string:
		*e = UserStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for UserStatus: %T", src)
	}
	return nil
}

type NullUserStatus struct {
	UserStatus UserStatus
	Valid      bool // Valid is true if String is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUserStatus) Scan(value interface{}) error {
	if value == nil {
		ns.UserStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UserStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUserStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return ns.UserStatus, nil
}

type FlCategory struct {
	ID        int64        `json:"id"`
	Name      string       `json:"name"`
	CreatedAt sql.NullTime `json:"created_at"`
	UpdatedAt sql.NullTime `json:"updated_at"`
}

type FlCategoryValue struct {
	ID         int64         `json:"id"`
	Name       string        `json:"name"`
	CategoryID sql.NullInt64 `json:"category_id"`
	CreatedAt  sql.NullTime  `json:"created_at"`
	UpdatedAt  sql.NullTime  `json:"updated_at"`
}

type FlCoache struct {
	ID        int64        `json:"id"`
	Name      string       `json:"name"`
	CreatedAt sql.NullTime `json:"created_at"`
	UpdatedAt sql.NullTime `json:"updated_at"`
}

type FlScoreScale struct {
	ID               int64         `json:"id"`
	Period           time.Time     `json:"period"`
	PlaceFrom        int32         `json:"place_from"`
	PlaceTo          int32         `json:"place_to"`
	NumbersOfPoints  int32         `json:"numbers_of_points"`
	SportSchoolID    sql.NullInt64 `json:"sport_school_id"`
	TypeTournamentID sql.NullInt64 `json:"type_tournament_id"`
	CreatedAt        sql.NullTime  `json:"created_at"`
	UpdatedAt        sql.NullTime  `json:"updated_at"`
}

type FlSportSchool struct {
	ID        int64        `json:"id"`
	Name      string       `json:"name"`
	CreatedAt sql.NullTime `json:"created_at"`
	UpdatedAt sql.NullTime `json:"updated_at"`
}

type FlSportsman struct {
	ID        int64        `json:"id"`
	Name      string       `json:"name"`
	Gender    string       `json:"gender"`
	DateBirth sql.NullTime `json:"date_birth"`
	CreatedAt sql.NullTime `json:"created_at"`
	UpdatedAt sql.NullTime `json:"updated_at"`
}

type FlSportsmanInfo struct {
	ID     int64     `json:"id"`
	Period time.Time `json:"period"`
	// Признак, застрахован ли спортсмен
	Insuranse     bool          `json:"insuranse"`
	SportSchoolID sql.NullInt64 `json:"sport_school_id"`
	SportsmanID   sql.NullInt64 `json:"sportsman_id"`
	CoacheID      sql.NullInt64 `json:"coache_id"`
	CreatedAt     sql.NullTime  `json:"created_at"`
	UpdatedAt     sql.NullTime  `json:"updated_at"`
}

type FlTournament struct {
	ID                  int64         `json:"id"`
	Name                string        `json:"name"`
	BeginDateTournament sql.NullTime  `json:"begin_date_tournament"`
	EndDateTournament   sql.NullTime  `json:"end_date_tournament"`
	Venue               string        `json:"venue"`
	TypeOfTornamentID   sql.NullInt64 `json:"type_of_tornament_id"`
	CreatedAt           sql.NullTime  `json:"created_at"`
	UpdatedAt           sql.NullTime  `json:"updated_at"`
}

type FlTournamentInfo struct {
	ID              int64         `json:"id"`
	Period          time.Time     `json:"period"`
	Points          int32         `json:"points"`
	Place           int16         `json:"place"`
	TournamentID    sql.NullInt64 `json:"tournament_id"`
	SportsmanID     sql.NullInt64 `json:"sportsman_id"`
	CategoryValueID sql.NullInt64 `json:"category_value_id"`
	CreatedAt       sql.NullTime  `json:"created_at"`
	UpdatedAt       sql.NullTime  `json:"updated_at"`
}

type FlTypeTournament struct {
	ID        int64        `json:"id"`
	Name      string       `json:"name"`
	CreatedAt sql.NullTime `json:"created_at"`
	UpdatedAt sql.NullTime `json:"updated_at"`
}

type Reset struct {
	UserID    int64     `json:"user_id"`
	Code      string    `json:"code"`
	CreatedAt time.Time `json:"created_at"`
}

type User struct {
	ID           int64      `json:"id"`
	Email        string     `json:"email"`
	Pass         string     `json:"pass"`
	Salt         string     `json:"salt"`
	Status       UserStatus `json:"status"`
	Verification string     `json:"verification"`
	CreatedAt    time.Time  `json:"created_at"`
	UpdatedAt    time.Time  `json:"updated_at"`
}
