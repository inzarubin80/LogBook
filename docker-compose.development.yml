version: '3'

services:
  frontend:
    container_name: logbook-docker-frontend
    build:
      dockerfile: Dockerfile.dev
      context: ./frontend
    command: npm run start
    stdin_open: true
    tty: true
    restart: unless-stopped
    networks:
      - logbook-docker-network
    volumes:
      - ./frontend/src:/usr/src/app/src
    depends_on:
      - auth

  nginx:
    image: nginx:stable-alpine
    container_name: logbook-docker-nginx
    ports:
      - "8000:8000"
    volumes:
      - ./nginx/nginx.conf.dev:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - frontend
    networks:
      - logbook-docker-network

  auth_db:
    container_name: logbook-docker-auth_db  
    build: auth_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - PGDATA = "/var/lib/postgresql/data/pgdata"
    networks:
      - logbook-docker-network  
    volumes:
      - ./auth/sql/schema:/docker-entrypoint-initdb.d/schema
       - db_data:/var/lib/postgresql/data

  auth:
    container_name: logbook-docker-auth
    build: 
      context: auth
      dockerfile: server.Dockerfile
      target: dev
    volumes:
      - ./auth:/root
    env_file: .env
    depends_on:
      - auth_db
    networks:
      - logbook-docker-network

networks:
  logbook-docker-network:
    driver: bridge

volumes:
    auth_db:
    db_data: